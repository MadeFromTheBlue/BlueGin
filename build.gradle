subprojects {
	group = 'blue.made.bluegin'

	ext.isgen = false;
	ext.isjava = false;
}

project(':core') {
	ext.isgen = true;
}

configure(subprojects.findAll {it.isgen}) {
	afterEvaluate {
		sourceSets {
			gen
			main {
				java {
					srcDir 'generated-src/java'
				}
				resources {
					srcDir 'generated-src/resources'
				}
			}
		}

		eclipse {
			classpath {
				plusConfigurations += [configurations.genCompile]
			}
		}
		
		dependencies {			
			genCompile 'com.squareup:javapoet:1.2.0'
			genCompile libs
		}
		
		task(genCode, dependsOn: 'genClasses', type: JavaExec) {
			main = 'blue.made.bluegin.codegen.Build'
			classpath = sourceSets.gen.runtimeClasspath
			args ''
			workingDir file(projectDir.getPath() + '/generated-src/')
		}

		compileJava.dependsOn genCode

		jar 
		{
			from sourceSets.main.output
			dependsOn classes
		}
	}
}