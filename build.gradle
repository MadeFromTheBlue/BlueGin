apply plugin: 'java'
apply plugin: 'eclipse'
	
archivesBaseName = "bluegin"
version = "0.0"

sourceSets {
    gen
    generated {
        java {
            srcDir 'generated/java'
        }
        resources {
            srcDir 'generated/resources'
        }
	}
}

eclipse {
	classpath {
		plusConfigurations += [configurations.genCompile]
	}
}

repositories {
	mavenCentral()
}

def commonLibs = []
def lwjglLibs = []

commonLibs << 'com.google.guava:guava:18.0'
commonLibs << 'org.apache.commons:commons-lang3:3.4'
commonLibs << 'org.apache.commons:commons-math3:3.5'
commonLibs << 'org.apache.commons:commons-io:1.3.2'
commonLibs << 'net.sf.trove4j:trove4j:3.0.3'
commonLibs << 'com.google.code.gson:gson:2.3'
lwjglLibs << 'org.lwjgl:lwjgl:3.0.0a'

dependencies {
	compile lwjglLibs
	compile commonLibs
	compile sourceSets.generated.output
	
	testCompile 'junit:junit:4.11'
	testCompile commonLibs
	
	genCompile 'com.squareup:javapoet:1.2.0'
	genCompile commonLibs
	genCompile lwjglLibs
	
	generatedCompile commonLibs
	generatedCompile lwjglLibs
}

task(genCode, dependsOn: 'genClasses', type: JavaExec) {
	main = 'blue.made.bluegin.codegen.Build'
	classpath = sourceSets.gen.runtimeClasspath
	args ''
	workingDir file('generated/')
}

compileGeneratedJava.dependsOn genCode

jar 
{
    from sourceSets.generated.output
    dependsOn generatedClasses
}